<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Mon, 29 May 2017 20:43:40 +0800</pubDate>
    <lastBuildDate>Mon, 29 May 2017 20:43:40 +0800</lastBuildDate>

    
      <item>
        <title>ssh-keygen实现密钥登录远程服务器</title>
        <link>http://localhost:4000/ssh-keygen</link>
        <pubDate>Mon, 29 May 2017 00:00:00 +0800</pubDate>
        <author></author>
        <description>&lt;p&gt;最近互联网上爆发了加密病毒，实验室的服务器疑似被入侵了。
最终定下来只使用一台32服务器连外网作为出口，另外两台通过32登录，且关闭ssh密码登录，转而使用ssh-keygen密钥实现自动登录。写篇短文以记录配置过程。
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;1首先在本地端生成rsa密钥和公钥&quot;&gt;1.首先在本地端生成RSA密钥和公钥&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后一路回车就可以了。（中间有设置密码提示，用来加密密钥）
会生成&lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;is_rsa.pub&lt;/code&gt;两个文件，前者密钥保留在本地，公钥分配到需要登录的服务器上。&lt;/p&gt;
&lt;h2 id=&quot;2将ssh公钥上传到服务器&quot;&gt;2.将SSH公钥上传到服务器&lt;/h2&gt;
&lt;p&gt;只需要一条命令就行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-copy-id username@remote-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;中间输入一次远程登录密码，SSH公钥就会自动上传了。公钥保存在&lt;code class=&quot;highlighter-rouge&quot;&gt;/home/username/.ssh/authorized_keys&lt;/code&gt;文件中。之后使用ssh登录或者scp传输文件都不需要登录了。&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>抛硬币先后手对胜率的影响</title>
        <link>http://localhost:4000/toss-coin-problem</link>
        <pubDate>Fri, 19 May 2017 00:00:00 +0800</pubDate>
        <author></author>
        <description>&lt;p&gt;最近复习概率论遇到一些很有意思的题目，有这样一个小例子：
\(A\)，\(B\)两人分别轮流抛一枚非公平硬币，正面朝上的概率是\(p\)，最先掷得正面朝上者胜出，假定\(A\)先抛，求先手胜出的概率。
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;可以证明，对于任意\(p&amp;gt;0\),先手获胜的概率都是大于\(\frac{1}{2}\)的。
甚至当硬币是公平的时候（\(p=0.5\)）先手获胜的概率仍然比二分之一要大。
在一种很极端的情况下，双方获胜概率趋近于相同，那就是硬币正面朝上的概率要趋于零（一个没有正面的硬币）！而此时双方都不可能获胜，这样的讨论在现实中也就失去了意义。&lt;/p&gt;

&lt;p&gt;下面先给出我的证明：
设\(A\)胜出的概率为\(P(A)\),\(B\)胜出的概率为\(P(B)\)，定义先手胜出的概率为\(P(win^{1st})\),在题目的条件下，\(A\)先手所以\(P(A)=P(win^{1st})\)
假设\(A\)第一次抛出了反面，我们就可以说\(B\)与\(A\)站在了同一起跑线上。在这种条件下\(B\)获胜的概率也就是我们所求的先手获胜概率。
由于\(A\)和\(B\)抛掷硬币是独立的，\(A\)第一次投出反面的情况下\(B\)获胜的概率为：
\[(1-p)P(win^{1st})=(1-p)P(A)\]
这个概率也等价于\(A\)没有获胜的概率，即\(P(\bar{A})\).
因此有：
\[(1-p)P(A)=1-P(A)\]
解出：\[P(A)=\frac{1}{2-p}\]&lt;/p&gt;

&lt;p&gt;这道题也可以用几何分布的模型来计算。
几何分布定义为在伯努利试验中，得到一次成功所需要的试验次数\(X\)。
若每次试验成功概率为\(p\)，那么\(k\)次试验中，第\(k\)次才得到成功的概率是：
\[P(X=k)=(1-p)^{k-1}p\]
在这题中若先抛者（也就是\(A\)）第\(k\)次抛掷硬币正面向上，意味着两人在之前交替的\(2(n-1)\)次中都抛出了反面，因此：
\[P(A)=\sum_{k=1}^{\infty}P(A_k)=\sum_{k=1}^{\infty}(1-p)^{2(n-1)}p=\frac{p}{1-(1-p)^2}=\frac{1}{2-p}\]&lt;/p&gt;

&lt;p&gt;对于这样一个看似周期性的过程，结果却与直觉相悖。由此观之，先手确实有着“得天独厚”的优势。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Courant Fischer Prove</title>
        <link>http://localhost:4000/courant-fischer-prove</link>
        <pubDate>Tue, 09 May 2017 00:00:00 +0800</pubDate>
        <author></author>
        <description>
</description>
      </item>
    
      <item>
        <title>git push repo 时保存密码的命令</title>
        <link>http://localhost:4000/git-push-save-pwd</link>
        <pubDate>Mon, 08 May 2017 00:00:00 +0800</pubDate>
        <author></author>
        <description>&lt;p&gt;在git push之前输一条命令可将密码保存到硬盘.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; config credential.helper store
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;密码保存在用户目录的.git-credentials文件中.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>第一篇博文</title>
        <link>http://localhost:4000/First-post</link>
        <pubDate>Mon, 08 May 2017 00:00:00 +0800</pubDate>
        <author></author>
        <description>&lt;p&gt;经过再三斟酌和尝试之后，决定使用&lt;a href=&quot;https://pages.github.com&quot;&gt;github page&lt;/a&gt;和&lt;a href=&quot;http://jekyllcn.com/&quot;&gt;jekyll&lt;/a&gt;来建立自己的第一个博客。
&lt;!--more--&gt;
考虑到博客的维护问题和单纯的只是想记录一些想法写些文章的初心，就选择了一个足够简单纯粹且能够驾驭的框架和主题。&lt;/p&gt;

&lt;p&gt;现在只定下了一个初步的框架，以后也许会加入一些projects和paper reading也不定。&lt;/p&gt;

&lt;p&gt;总之一切顺着自己性子来;希望时间在此地缓缓流淌。&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
